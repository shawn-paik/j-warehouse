{"version":3,"sources":["components/Jumbotron/Jumbotron.js","utils/API.js","components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/List/List.js","components/List/ListItem.js","components/Form/Input.js","components/Form/FormBtn.js","pages/Loads/Loads.js","pages/NoMatch/NoMatch.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","_ref","children","react_default","a","createElement","style","height","clear","className","API","getLoads","axios","get","getLoad","id","deleteLoad","delete","saveLoad","loadData","data","FormData","append","supplier","receivedDate","comments","_arr","Object","keys","filesCollection","_i","length","key","post","Col","size","split","map","join","Container","fluid","concat","Row","List","ListItem","props","Input","assign","FormBtn","float","marginBottom","Loads","state","loads","Date","load","fileInput","React","createRef","then","res","_this","setState","console","log","catch","err","loadLoads","handleInputChange","event","target","files","_event$target","name","defineProperty","_event$target2","value","handleFormSubmit","preventDefault","document","getElementById","this","_this2","Container_Container","Row_Row","Col_Col","components_Jumbotron_Jumbotron","List_List_List","ListItem_ListItem","_id","onClick","toLocaleDateString","Input_Input","onChange","placeholder","react_datepicker_min_default","selected","onChangeReceivedDate","type","multiple","FormBtn_FormBtn","disabled","Component","NoMatch","role","aria-label","Nav","href","App","es","components_Nav_Nav","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e1ee4cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Jumbotron = ({ children }) => (\r\n  <div style={{ height: \"100%\", clear: \"both\" }} className=\"jumbotron\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Jumbotron;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n\t\r\n\r\n\t\t\r\n\tgetLoads: function() {\r\n\t\treturn axios.get('/api/loads');\r\n\t},\r\n\t\r\n\tgetLoad: function(id) {\r\n\t\treturn axios.get('/api/loads/' + id);\r\n\t},\r\n\t\r\n\tdeleteLoad: function(id) {\r\n\t\treturn axios.delete('/api/loads/' + id);\r\n\t},\r\n\t\r\n\tsaveLoad: function(loadData) {\r\n\t\tconst data = new FormData();\r\n\t\t// data.append('files', loadData.files);\r\n\t\tdata.append('supplier', loadData.supplier);\r\n\t\tdata.append('receivedDate', loadData.receivedDate);\r\n\t\tdata.append('comments', loadData.comments);\r\n\t\tfor(const key of Object.keys(loadData.filesCollection)){\r\n\t\t\tdata.append('filesCollection', loadData.filesCollection[key])\r\n\t\t};\r\n\t\t// const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\t\treturn axios.post('/api/loads', data);\r\n\t}\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Col = ({ size, children }) => (\r\n  <div className={size.split(\" \").map(size => \"col-\" + size).join(\" \")}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Container = ({ fluid, children }) => (\r\n  <div className={`container${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Row = ({ fluid, children }) => (\r\n  <div className={`row${fluid ? \"-fluid\" : \"\"}`}>\r\n    {children}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./List.css\";\r\n\r\nexport const List = ({ children }) => {\r\n  return (\r\n    <div className=\"list-overflow-container\">\r\n      <ul className=\"list-group\">\r\n        {children}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ListItem = props => (\r\n  <li className=\"list-group-item\">\r\n    {props.children}\r\n  </li>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Input = props => (\r\n  <div className=\"form-group\">\r\n    <input className=\"form-control\" {...props} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const FormBtn = props => (\r\n  <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\r\n    {props.children}\r\n  </button>\r\n);\r\n","import React, { Component } from 'react';\r\nimport DeleteBtn from '../../components/DeleteBtn';\r\nimport Jumbotron from '../../components/Jumbotron';\r\nimport DatePicker from 'react-datepicker';\r\nimport API from '../../utils/API';\r\nimport { Col, Row, Container } from '../../components/Grid';\r\nimport { List, ListItem } from '../../components/List';\r\nimport { Input, FormBtn } from '../../components/Form';\r\n\r\nclass Loads extends Component {\r\n\tstate = {\r\n\t\tloads: [],\r\n\t\tsupplier: '',\r\n        receivedDate: new Date(),\r\n        // items: [],\r\n\t\tfilesCollection: null,\r\n\t\tcomments:'',\r\n\t\tload: null\r\n\t};\r\n\r\n\tfileInput = React.createRef();\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadLoads();\r\n\t}\r\n\r\n\tgetLoad = (id) =>{\r\n\t\tAPI.getLoad(id)\r\n\t\t\t.then(res=> {\r\n\t\t\t\tthis.setState({load:res.data})\r\n\t\t\t\tconsole.log(res.data);\r\n\t\t\t})\r\n\t\t\t.catch(err=>console.log(err));\r\n\t}\r\n\r\n\tloadLoads = () => {\r\n\t\tAPI.getLoads()\r\n            .then(res =>{\r\n\t\t\t\tthis.setState({ loads: res.data,\r\n\t\t\t\t\tsupplier: '',\r\n\t\t\t\t\treceivedDate: new Date(),\r\n\t\t\t\t\tfilesCollection: null,\r\n\t\t\t\t\tcomments: '',\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\tdeleteLoad = id => {\r\n\t\tAPI.deleteLoad(id)\r\n\t\t\t.then(res => this.loadLoads())\r\n\t\t\t.catch(err => console.log(err));\r\n\t};\r\n\r\n\t\r\n\thandleInputChange = event => {\r\n\t\tif(event.target.files && event.target.files.length > 0){\r\n            const {name, files} = event.target;\r\n            this.setState({\r\n                [name]: files\r\n            })\r\n        }else{\r\n            const { name, value } = event.target;      \r\n            this.setState({\r\n                [name]: value\r\n            });\r\n        }\r\n\t};\r\n\r\n\thandleFormSubmit = event => {\r\n\t\tevent.preventDefault();\r\n        if (this.state.supplier && this.state.comments) {\r\n            const load = {\r\n                supplier: this.state.supplier,\r\n                receivedDate: this.state.receivedDate,\r\n\t\t\t\tfilesCollection: this.state.filesCollection,\r\n\t\t\t\tcomments: this.state.comments\r\n            };\r\n\t\t\t\r\n            API.saveLoad(load)\r\n                .then((res) => {\r\n\t\t\t\t\tdocument.getElementById('file-input').value=\"\";\r\n\t\t\t\t\tthis.loadLoads()\r\n\t\t\t\t})\r\n                .catch(err => console.log(err));\r\n        }\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col size=\"md-6\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t{this.state.loads.length ? (\r\n\t\t\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t\t\t{this.state.loads.map(load => (\r\n\t\t\t\t\t\t\t\t\t\t<ListItem key={load._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => {this.getLoad(load._id)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{new Date(load.receivedDate).toLocaleDateString()} - {load.supplier}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <DeleteBtn onClick={() => this.deleteLoad(load._id)} /> */}\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<h3>No Results to Display</h3>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<form>\r\n                            <Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.supplier}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"supplier\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Supplier (required)\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tvalue={this.state.comments}\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"comments\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Comments (required)\"\r\n\t\t\t\t\t\t\t/>\r\n                            <DatePicker\r\n                                selected={this.state.receivedDate}\r\n                                onChange={this.onChangeReceivedDate}\r\n                            />\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\t\tname=\"filesCollection\"\r\n\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\tid=\"file-input\"\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<FormBtn\r\n\t\t\t\t\t\t\t\tdisabled={!(this.state.supplier && this.state.comments)}\r\n\t\t\t\t\t\t\t\tonClick={this.handleFormSubmit}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSubmit Load\r\n\t\t\t\t\t\t\t</FormBtn>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col size=\"md-6 sm-12\">\r\n\t\t\t\t\t\t<Jumbotron>\r\n\t\t\t\t\t\t\t<h1>Load</h1>\r\n\t\t\t\t\t\t\t{this.state.load != null ? \r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>{new Date(this.state.load.receivedDate).toLocaleDateString()}</li>\r\n\t\t\t\t\t\t\t\t\t<li>{this.state.load.comments}</li>\r\n\t\t\t\t\t\t\t\t\t<li>{this.state.load.supplier}</li>\r\n\t\t\t\t\t\t\t\t\t{/* getfile */}\r\n\t\t\t\t\t\t\t\t\t{/* <li>{this.state.load.files}</li> */}\r\n\t\t\t\t\t\t\t\t</ul>  \r\n\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Loads;\r\n","import React from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport Jumbotron from \"../../components/Jumbotron\";\r\n\r\nconst NoMatch = () => (\r\n  <Container fluid>\r\n    <Row>\r\n      <Col size=\"md-12\">\r\n        <Jumbotron>\r\n          <h1>404 Page Not Found</h1>\r\n          <h1>\r\n            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n              🙄\r\n            </span>\r\n          </h1>\r\n        </Jumbotron>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default NoMatch;\r\n","import React from 'react';\r\n\r\nconst Nav = () => (\r\n\t<nav className=\"navbar navbar-inverse navbar-top\">\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"navbar-header\">\r\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">\r\n\t\t\t\t\tLoads\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</nav>\r\n);\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Loads from './pages/Loads';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Nav from './components/Nav';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div>\r\n\t\t\t<Nav />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route exact path=\"/\" component={Loads} />\r\n\t\t\t\t<Route exact path=\"/loads\" component={Loads} />\r\n\t\t\t\t<Route component={NoMatch} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}